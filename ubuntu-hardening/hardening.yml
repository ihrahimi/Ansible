---
- name: Phase 2 - Complete Server Hardening
  hosts: all
  become: true
  vars:
    # Network Configuration
    new_ssh_port: 19200             # MUST match Phase 1 value
    allowed_tcp_ports: [80, 443]    # Web ports
    allowed_udp_ports: []           # Example: [53] for DNS
    
    # System Hardening
    security_limits:
      - { domain: '*', limit_type: '-', limit_item: nofile, value: '64000' }
      - { domain: '*', limit_type: '-', limit_item: nproc, value: '64000' }
      - { domain: '*', limit_type: '-', limit_item: core, value: '0' }

  tasks:
    ### 1. Connection Preservation ###
    - name: Allow established connections
      iptables:
        chain: INPUT
        ctstate: ESTABLISHED,RELATED
        jump: ACCEPT
        comment: "Allow established connections"

    - name: Allow current SSH port
      iptables:
        chain: INPUT
        protocol: tcp
        destination_port: "{{ new_ssh_port }}"
        jump: ACCEPT
        comment: "Allow SSH on custom port"

    ### 2. SSH Hardening ###
    - name: Configure SSH security
      block:
        - name: Disable password authentication
          lineinfile:
            path: /etc/ssh/sshd_config
            regexp: '^#?PasswordAuthentication'
            line: "PasswordAuthentication no"
            
        - name: Disable root login
          lineinfile:
            path: /etc/ssh/sshd_config
            regexp: '^#?PermitRootLogin'
            line: "PermitRootLogin no"
            
        - name: Enable strict modes
          lineinfile:
            path: /etc/ssh/sshd_config
            regexp: '^#?StrictModes'
            line: "StrictModes yes"
            
      notify: restart sshd

    ### 3. Firewall Configuration ###
    - name: Set default firewall policies
      iptables:
        chain: "{{ item.chain }}"
        policy: "{{ item.policy }}"
      loop:
        - { chain: INPUT, policy: DROP }
        - { chain: FORWARD, policy: DROP }
        - { chain: OUTPUT, policy: ACCEPT }

    - name: Configure base firewall rules
      block:
        - name: Allow loopback
          iptables:
            chain: INPUT
            in_interface: lo
            jump: ACCEPT

        - name: Allow ICMP (ping)
          iptables:
            chain: INPUT
            protocol: icmp
            jump: ACCEPT

        - name: Allow essential TCP ports
          iptables:
            chain: INPUT
            protocol: tcp
            destination_port: "{{ item }}"
            jump: ACCEPT
          loop: "{{ [new_ssh_port] + allowed_tcp_ports }}"

        - name: Allow essential UDP ports
          iptables:
            chain: INPUT
            protocol: udp
            destination_port: "{{ item }}"
            jump: ACCEPT
          loop: "{{ allowed_udp_ports }}"

    ### 4. System Hardening ###
    - name: Configure security limits
      pam_limits:
        domain: "{{ item.domain }}"
        limit_type: "{{ item.limit_type }}"
        limit_item: "{{ item.limit_item }}"
        value: "{{ item.value }}"
      loop: "{{ security_limits }}"

    - name: Secure shared memory
      mount:
        path: /dev/shm
        src: tmpfs
        fstype: tmpfs
        opts: defaults,noexec,nosuid,nodev
        state: present

    - name: Disable core dumps
      sysctl:
        name: kernel.core_pattern
        value: "|/bin/false"
        state: present

    ### 5. Kernel Hardening ###
    - name: Configure kernel parameters
      sysctl:
        name: "{{ item.name }}"
        value: "{{ item.value }}"
        state: present
        reload: yes
      loop:
        - { name: net.ipv4.conf.all.rp_filter, value: 1 }
        - { name: net.ipv4.tcp_syncookies, value: 1 }
        - { name: net.ipv4.conf.all.accept_redirects, value: 0 }
        - { name: kernel.kptr_restrict, value: 2 }

    ### 6. Maintenance ###
    - name: Configure automatic updates
      apt:
        name: unattended-upgrades
        state: present

    - name: Enable security updates
      copy:
        dest: /etc/apt/apt.conf.d/50unattended-upgrades
        content: |
          Unattended-Upgrade::Allowed-Origins {
              "Ubuntu:{{ ansible_distribution_release }}-security";
          };
          Unattended-Upgrade::Automatic-Reboot "true";
          Unattended-Upgrade::Automatic-Reboot-Time "02:00";

    ### 7. Finalize Configuration ###
    - name: Persist iptables rules
      command: /usr/sbin/netfilter-persistent save
      changed_when: false

    - name: Remove old SSH port from config
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^Port 22'
        state: absent
      notify: restart sshd

  handlers:
    - name: restart sshd
      service:
        name: ssh
        state: restarted
